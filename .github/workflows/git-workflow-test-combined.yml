name: Git Workflow Test Publish Combined

on:
  push:
    tags:
      - "*"
    branches-ignore:
      - '*'
  workflow_dispatch:

jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - uses: actions/checkout@v3
    - name: Install build dependencies
      run: pip install build
    - name: Build distribution
      run: python -m build ./git-workflow-test
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: ./git-workflow-test/dist/

  openapi-publish:
    name: OpenAPI Generate and Publish
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get branch name (merge)
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Setup python for openapi generate
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install app
        run: |
          python -m pip install git+https://github.com/openg2p/openg2p-fastapi-common@1.1.0\#subdirectory=openg2p-fastapi-common
          python -m pip install git+https://github.com/openg2p/openg2p-fastapi-common@1.1.0\#subdirectory=openg2p-fastapi-auth
          python -m pip install git-workflow-test==1.0.0
      - name: Generate openapi json
        run: |
          mkdir -p git-workflow-test/api-docs/generated
          python3 git-workflow-test/main.py getOpenAPI git-workflow-test/api-docs/generated/openapi.json
      # - name: Commit Changes
      #   uses: EndBug/add-and-commit@v7
      #   with:
      #     default_author: github_actions
      #     message: "Generated new openapi.json on push"
      #     add: "git-workflow-test/api-docs/generated/openapi.json"
      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Publish to stoplight
        run: |
          npx @stoplight/cli@5 push --ci-token ${{ secrets.STOPLIGHT_PROJECT_TOKEN }} --url https://openg2p.stoplight.io --branch ${{ env.TAG_NAME }} --directory git-workflow-test/api-docs/generated


  docker-build-for-tag:
    name: Docker Build and Push Tag
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.docker_hub_organisation || 'openg2p' }}
      SERVICE_NAME: git-workflow-test
    steps:
      - uses: actions/checkout@v3
      - name: Docker build
        run: |
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

          IMAGE_ID=$NAMESPACE/$SERVICE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=TAG_NAME
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV
          echo VERSION=$VERSION >> $GITHUB_ENV

          docker build ./git-workflow-test -f ./git-workflow-test/Dockerfile-pypi \
            --tag $IMAGE_ID:$VERSION
          if [[ '${{ secrets.docker_hub_token }}' != '' && '${{ secrets.docker_hub_actor }}' != '' ]]; then
            export DOCKER_PUSH="true"
            echo DOCKER_PUSH=$DOCKER_PUSH >> $GITHUB_ENV
          fi
      - name: Docker push
        if: env.DOCKER_PUSH == 'true'
        run: |
          echo "${{ secrets.docker_hub_token }}" | docker login -u ${{ secrets.docker_hub_actor }} --password-stdin
          docker push ${{ env.IMAGE_ID }}:${{ env.VERSION }}
